// ==UserScript==
// @name         AutoInteract PopMundo
// @namespace    https://popmundo.com/
// @version      0.1
// @description
// @author       Arthur L#3301
// @match        https://*.popmundo.com/World/Popmundo.aspx/*
// @icon         https://www.google.com/s2/favicons?domain=popmundo.com
// @grant        none
// @require  https://code.jquery.com/jquery-3.6.0.min.js
// ==/UserScript==
(function() {
    'use strict'
    const jQuery = $.noConflict()

    //Delay entre abertura de abas em milisegundos.
    const DELAY = 500 //ms
    //A ordem das aÃ§Ãµes afeta na hora da escolha.
    const interactions = {
        friendly: [
            158, //DanÃ§ar o fish slapping"
            18, //"Brincar com"
            44, //"Fazer massagem"
            60, //"High Five"
            67, //"Queda de braÃ§o"
            66, //"TranÃ§ar o cabelo"
            62, //"Dizer o que pensa"
            34, //"Ter uma discussÃ£o profunda"
            98, //"Falar sobre hobbies"
            99, //"Esconde-esconde"
            101, //"Explicar coisas"
            104, //"Contar conto-de-fadas"
            93, //"Pegar no colo"
            95, //"Trocar as fraldas"
            6, //"Gugu-dadá"
            96, //"Cantar uma canção de ninar"
            103, //"Beijinho na testa"
            51, //"Consolar"
            65, //"Fofocar"
            91, //"Olhar"
            90, //"Balbuciar"
            92, //"Sorrir alegremente"
            106, //"Admirar"
            100, //"Perguntar coisas"
            33, //"Fazer uma mágica divertida"
            63, //"Tapinha nas costas"
            1, //"Cumprimentar"
            3, //"Conversar"
            5, //"Fazer graÃ§a"
            69, //"Contar segredos"
            70, //"Dar uma volta"
            57, //"Fraternizar"
            68, //"Dar conselhos"
            55, //"Aperto de mÃ£o"
            59, //"Passar um tempo junto"
            8, //"AbraÃ§ar"
            56, //"Beijar o rosto"
            21, //"Cantar para"
            4, //"Contar piada"
            24, //"Ligar para papear"
            26, //"Passar trote"
            121, //Fofocar ao telefone"
            58, //"Mandar foto engraÃ§ada por MMS"
            61, //"Mandar mensagem no celular"
        ],
        romance: [
            35, //"Tirar para dançar"
            10, //"Beijar apaixonadamente"
            76, //"Contar piada safada"
            30, //"Acariciar"
            75, //"Louvar"
            77, //"Dizer eu amo vocÃª"
            9, //"Beijar"
            78, //"Fazer serenata"
            161, //"Piscar"
            14, //"Elogiar"
            71, //"VocÃª vem sempre aqui?"
            20, //"Dar uns tapinhas..."
            13, //"Rapidinha"
            64, //"Envolver"
            12, //"Fazer cÃ³cegas"
            165, //"LigaÃ§Ã£o Romantica"
            25, //"LigaÃ§Ã£o safadinha"
            74, //"Flertar por SMS"
            73, //"Ligar para flertar"
            11, //"Fazer amor"
            19, //"Sexo tÃ¢ntrico"
            164, //"Desfrutar do Kobe Sutra"
            13, //"Rapidinha"
        ]
    }

    // !!!!!!!!!!!!!!!!!!!!!! NÃO MEXER DEPOIS DESSA LINHA !!!!!!!!!!!!!!!!!!!!!!

    jQuery.fn.center = function () {
        return this.css("left", jQuery("#ppm-main").position().left + "px")
    }

    const getInteractionUserLinks = () => {
        const links = []
        jQuery("a").each((i, a) => {
            if (a.href.includes("/Interact/Details/")) {
                links.push(a.href.replace("/Interact/Details/", "/Character/"))
            }
        });
        return links
    }

    const getAvaiableInteractions = () => {
        const result = [];
        jQuery("#ctl00_cphTopColumn_ctl00_ddlInteractionTypes option").each((_, o) => {
            if (o.value == 0) {
                return
            }
            result.push(o.value)
        })
        return result
    }

    const getLocationId = () => {
        var result = 0
        jQuery(".characterPresentation a").each((i, a) => {
            if (a.href.includes("/World/Popmundo.aspx/Locale/")) {
                result = Number(a.href.split("/Locale/")[1])
            }
        })
        return result;
    }

    const getCityId = () => {
        var result = 0
        jQuery(".characterPresentation a").each((_, a) => {
            if (a.href.includes("/World/Popmundo.aspx/City/")) {
                result = Number(a.href.split("/City/")[1])
            }
        })
        return result
    }

    const goToPage = (page) => {
        jQuery.when(jQuery("#ctl00_cphLeftColumn_ctl00_ddlShowPage").val(page).change()).then(() => {
            __doPostBack('ctl00$cphLeftColumn$ctl00$ddlShowPage', '')
        })
    }

    const gotoInteraction = (id) => {
        window.location.pathname = `/World/Popmundo.aspx/Interact/${id}`
    }

    const gotoLocation = (locationId, userId) => {
        window.location.pathname = `/World/Popmundo.aspx/Locale/MoveToLocale/${locationId}/${userId}`
    }

    const getPageCount = () => {
        const p = jQuery("#ctl00_cphLeftColumn_ctl00_ddlShowPage option").length
        return p == 0 ? 1 : p
    }

    const getCurrentPage = () => {
        let currentId = 1;
        jQuery("#ctl00_cphLeftColumn_ctl00_ddlShowPage option").each((_, o) => {
            if (jQuery(o).attr("selected")) {
                currentId = o.value
            }
        })
        return currentId
    }

    const isLastPage = () => {
        return (getCurrentPage() == getPageCount())
    }

    const interact = (id) => {
        jQuery.when(jQuery("#ctl00_cphTopColumn_ctl00_ddlInteractionTypes").val(id).change()).then(() => {
            let intrBtn = jQuery("#ctl00_cphTopColumn_ctl00_btnInteract");
            if (intrBtn.length == 0) {
                return
            }
            intrBtn.click()
        })
    }

    const getNextInteraction = (userId) => {
        const preference = localStorage.getItem("interact-" + userId)
        const avaiableIntr = getAvaiableInteractions()
        if (preference) {
            if (preference === "skip") {
                return -1
            }
            if (interactions[preference]) {
                for (let intr of interactions[preference]) {
                    for (let aitr of avaiableIntr) {
                        if (aitr == intr) {
                            return intr
                        }
                    }
                }
            }
        }
        for (let typeId in interactions) {
            for (let intr of interactions[typeId]) {
                for (let aitr of avaiableIntr) {
                    if (aitr == intr) {
                        return intr
                    }
                }
            }
        }
        return -1
    }

    const open = (cityId, links, current, finished) => {
        if (links.length == current) {
            finished()
            return
        }
        const child = window.open(links[current] + "#" + cityId, '', 'toolbar=0');
        const interval = setInterval(() => {
            if (child.closed) {
                clearInterval(interval)
                open(cityId, links, current + 1, finished)
            }
        }, 500)
    }

    const injectGUI = () => {
        const box = `<div class="box">
        <h2>InteraÃ§Ã£o automatica</h2>
        <p>Clique em iniciar para comeÃ§ar a interagir.</p>
        <p style="color:red;"><b>AtenÃ§Ã£o: Para que o script funcione de maneira adequada permita todos os popups.</b></p>
        <p style="color:red;"><b>AtenÃ§Ã£oÂ²: VocÃª deve desablitiar os popups de confirmaÃ§Ã£o em <a target="_blank" href="/User/Popmundo.aspx/User/ContentSettings">configuraÃ§Ãµes</a>.</b></p>
        <p class="actionbuttons">
        <button type="button" id="interact-script-start" class="round">Iniciar</button>
        </p>
        </div>`
        jQuery(".data thead tr").append("<th>Prioridade</th>")
        jQuery("#ppm-content").append(box)
        jQuery(".data tbody tr").each((_, elem) => {
            let id = 0;
            jQuery(elem).find("a").each((_, a) => {
                if (a.href.includes("/Character/")) {
                    id = Number(a.href.split("/Character/")[1])
                    return
                }
            })
            if (id != 0) {
                const selectedIteration = localStorage.getItem("interact-" + id)
                let options = ""
                for (var opt in interactions) {
                    options += `<option value="${opt}" ${selectedIteration == opt ? "selected":"" }>${opt}</option>`
                }
                options += `<option value="skip" ${selectedIteration == "skip" ? "selected":"" }>skip</option>`
                const select = `<td><select data-id="${id}" class="interaction-type round">${options}</select></td>`
                jQuery(elem).append(select)
            }
        });
        jQuery(document).on("change", ".interaction-type", (event) => {
            var elem = jQuery(event.target)
            localStorage.setItem("interact-" + elem.data("id"), elem.val())
        })
    }

    const loadInteractionIds = () => {
        jQuery("#ctl00_cphTopColumn_ctl00_ddlInteractionTypes option").each((_, o)=>{
            jQuery(o).html('['+o.value+'] ' + jQuery(o).html())
        })
    }

    jQuery(document).ready(() => {
        const path = window.location.pathname
        const extraData = decodeURI(window.location.hash).replace("#", "");
        if (path.includes("/Character/Relations/")) {
            injectGUI()
            const currentPage = Number(getCurrentPage())
            const cityId = getCityId()
            if (localStorage.getItem("interactScriptPage") == currentPage) {
                localStorage.removeItem("interactScriptStarted")
                localStorage.removeItem("interactScriptPage")
                window.location.reload()
            }
            if (localStorage.getItem("interactScriptStarted")) {
                localStorage.setItem("interactScriptPage", currentPage)
                open(cityId, getInteractionUserLinks(currentPage), 0, () => {
                    if (isLastPage()) {
                        localStorage.removeItem("interactScriptStarted")
                        localStorage.removeItem("interactScriptPage")
                        alert("Script finalizado.")
                        return
                    } else {
                        goToPage(currentPage + 1)
                    }
                })
            } else {
                jQuery(document).on("click", "#interact-script-start", (evt) => {
                    jQuery(evt.target).attr("disabled", "disabled")
                    localStorage.setItem("interactScriptStarted", true)
                    localStorage.setItem("interactScriptPage", currentPage)
                    open(cityId, getInteractionUserLinks(currentPage), 0, () => {
                        if (isLastPage()) {
                            alert("Script finalizado.")
                            localStorage.removeItem("interactScriptStarted")
                            localStorage.removeItem("interactScriptPage")
                            return
                        } else {
                            goToPage(currentPage + 1)
                        }
                    })
                })
            }
        } else if (path.includes("/Character/") && !path.includes("/Character/Relations/")) {
            if (localStorage.getItem("interactScriptStarted")) {
                const id = Number(path.split("/Character/")[1])
                const myCityId = Number(extraData)
                const locId = getLocationId()
                if (isNaN(locId) || isNaN(id)) {
                    window.close()
                    return
                }
                if (locId == 0 || getCityId() == 0){
                    window.close()
                    return
                }
                if (myCityId == getCityId()) {
                    gotoLocation(locId, id)
                } else {
                    gotoInteraction(id)
                }
            }
        } else if (path.includes("/Interact/Details/")){
            loadInteractionIds()
        } else if (path.includes("/Interact/")) {
            if (localStorage.getItem("interactScriptStarted")) {
                const id = Number(path.split("/Interact/")[1])
                let itr = getNextInteraction(id);
                if (itr === -1) {
                    setTimeout(() => {
                        window.close()
                    }, DELAY)
                    return
                }
                interact(itr)
            } else {
                loadInteractionIds()
            }
        } else {
            window.close()
        }
    })
})()
